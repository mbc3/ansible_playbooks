---
- name: Test
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    test_ip: "10.20.102.100"
    ipmi_default_gateway: "0.1"
    render_subnet: "102"

  tasks:
    # - name: Test URI
    #   ansible.builtin.uri:
    #     url: https://matthewbriancohen.art
    #     return_content: true
    #   register: url_output
    # - name: Display
    #   ansible.builtin.debug:
    #     msg: "{{ url_output }}"
    #   when: url_output.status != 200 or "'Cohen' in url_output.content"
    # - name: Register test file info
    #   ansible.builtin.stat:
    #     path: /home/mbc/test_file.txt
    #   register: test_file
    # - name: Display test file info
    #   ansible.builtin.debug:
    #     var: test_file
    # - name: Sort test file
    #   ansible.builtin.command: sort --unique --output=/home/mbc/test_file.txt /home/mbc/test_file.txt
    #   register: test_output
    #   changed_when: false
    # - name: Display Test File Output
    #   ansible.builtin.debug:
    #     var: test_output
    - name: Resgister test string dnf
      ansible.builtin.command: echo kernel
      register: dnf_updates
      notify: Restart
      changed_when: true
    - name: Display DNF
      ansible.builtin.debug:
        var: dnf_updates
    - name: Display Thing
      ansible.builtin.debug:
        var: "{{ (test_ip | split('.')).1 }}"
    - name: Configure IPMI IP Address
      command: "/usr/bin/echo lan set 1 ipaddr 10.1{{ (test_ip | split('.')).1[0] }}0.{{ render_subnet }}.{{ (test_ip | split('.')).3 }}"
      changed_when: false
      register: la_ip
    - name: Configure IPMI Default Gateway
      command: "/usr/bin/echo lan set 1 defgw ipaddr 10.1{{ (test_ip | split('.')).1[0] }}0.{{ ipmi_default_gateway }}"
      changed_when: false
      register: la_gateway

    - name: Display Variables
      ansible.builtin.debug:
        var: "{{ item }}"
      loop:
        - test_ip
        - la_ip.stdout
        - la_gateway.stdout
  handlers:
    - name: Restart
      ansible.builtin.debug:
        msg: "yes, this hit"
      when: dnf_updates.stdout.find('kernel') != -1
