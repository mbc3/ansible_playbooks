---
- name: Install Smallstep CLI
  when:
    - ansible_distribution != "Debian"
    - inventory_hostname != "ca"
  block:
    - name: Create Smallstep repo
      ansible.builtin.template:
        src: smallstep.repo.j2
        dest: /etc/yum.repos.d/smallstep.repo
        mode: "0644"
    - name: Open http/https ports on firewall for ACME challenges
      ansible.posix.firewalld:
        service: "{{ item }}"
        state: enabled
        permanent: true
        immediate: true
      loop: "{{ ca_client_ports }}"

- name: Install Smallstep CLI (Debian)
  when:
    - ansible_distribution == "Debian"
    - inventory_hostname != "ca"
  block:
    - name: Add Smallstep key (Debian)
      ansible.builtin.get_url:
        url: "{{ ca_smallstep_deb_gpg }}"
        dest: /etc/apt/trusted.gpg.d/smallstep.asc
        mode: "0644"
    - name: Add Smallstep repo (Debian)
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/etc/apt/trusted.gpg.d/smallstep.asc] https://packages.smallstep.com/stable/debian debs main"
        state: present

- name: Install necessary packages
  block:
    - name: Install all packages
      ansible.builtin.package:
        name: "{{ item }}"
        state: present
        loop: "{{ ca_packages }}"

- name: Trust Root CA
  when: inventory_hostname != "ca"
  become: true
  block:
    - name: Check if Root CA exists
      ansible.builtin.stat:
        path: "{{ ca_root_ca }}"
      register: root_ca
    - name: Tell user to trust Root CA
      ansible.builtin.debug:
        msg: "Make sure you run 'step ca bootstrap --ca-url CA_URL --fingerprint CA_FINGERPRINT'!"
    - name: Bootstrap Smallstep with Root CA and trust it
      ansible.builtin.command: step ca bootstrap --ca-url {{ ca_url }} --fingerprint {{ ca_fingerprint }} --install
      when: not root_ca.stat.exists
      changed_when: false
    - name: Set REQUESTS_CA_BUNDLE env variable to step path
      ansible.builtin.lineinfile:
        path: /etc/environment
        line: REQUESTS_CA_BUNDLE={{ ca_root_ca }}
        state: present
