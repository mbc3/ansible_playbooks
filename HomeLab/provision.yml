---
- name: Provisioning HomeLab Container/VMs
  become: true
  hosts: proxmox_all_lxc, proxmox_all_qemu

  vars:
    rhel_package_list:
      - openssh-server
      - golang-github-prometheus-node-exporter
    debian_package_list:
      - prometheus-node-exporter

  pre_tasks:
    - name: Update all packages
      ansible.builtin.package:
        name: "*"
        state: latest
      register: package_updates
      notify: Display updated packages
    - name: Make sure ansible service account user exists
      ansible.builtin.user:
        name: ansible
        comment: Ansible Service Account
    - name: Copy Proxmox SSH key
      ansible.posix.authorized_key:
        user: ansible
        state: present
        key: "{{ lookup('file', '/home/mbc/.ssh/proxmox.pub') }}"
    - name: Remove MBC SSH key from Ansible service account
      ansible.posix.authorized_key:
        user: ansible
        state: absent
        key: "{{ lookup('file', '/home/mbc/.ssh/id_ed25519.pub') }}"
    - name: Set Ansible user to NOPASSWD in sudoers
      community.general.sudoers:
        name: 99-ansible
        state: present
        user: ansible
        commands: ALL
        host: ALL
        nopassword: true

  roles:
    - role: rsyslog

  tasks:
    - name: Set timezone to Los Angeles
      community.general.timezone:
        name: America/Los_Angeles
    - name: Check if EPEL is installed
      ansible.builtin.stat:
        path: /etc/yum.repos.d/epel.repo
      register: epel
    - name: Install EPEL repo
      ansible.builtin.dnf:
        name: epel-release
        state: present
      when: ansible_distribution != "Debian"
    - name: Enable EPEL CRB
      ansible.builtin.command: dnf config-manager --set-enabled crb
      register: crb_output
      changed_when: crb_output.rc != 0
      when:
        - not epel.stat.exists
        - ansible_distribution != "Debian"
    - name: Install necessary packages
      ansible.builtin.dnf:
        name: "{{ item }}"
        state: present
      loop: "{{ rhel_package_list }}"
      when: ansible_distribution != "Debian"
    - name: Install necessary packages
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
      loop: "{{ debian_package_list }}"
      when: ansible_distribution == "Debian"
    - name: Enable Prometheus node exporter service
      ansible.builtin.systemd_service:
        name: prometheus-node-exporter
        enabled: true
        state: started
    - name: Install QEMU guest agent
      ansible.builtin.package:
        name: qemu-guest-agent
        state: present
      when: "'proxmox_all_qemu' in group_names"

  handlers:
    - name: Display updated packages
      ansible.builtin.debug:
        var: package_updates
      when: package_updates is defined
