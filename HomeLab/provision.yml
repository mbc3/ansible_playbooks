---
- name: Provisioning HomeLab Container/VMs
  become: true
  hosts: proxmox_all_lxc, proxmox_all_qemu

  vars:
    nfs_mountpoint: "/mnt/share"

  pre_tasks:
    - name: Update all packages
      ansible.builtin.dnf:
        name: "*"
        state: latest
      when: ansible_distribution != "Debian"
      notify: Restart machine
    - name: Update all packages (for Debian containers)
      ansible.builtin.apt:
        update-cache: true
        upgrade: true
      when: ansible_distribution == "Debian"
      notify: Restart machine
    - name: Install SSHD
      ansible.builtin.dnf:
        name: openssh-server
        state: present
      when: ansible_distribution != "Debian"
    - name: Make sure ansible user exists
      ansible.builtin.user:
        name: ansible
        comment: Ansible Service Account
    - name: Copy MBC SSH key
      ansible.posix.authorized_key:
        user: ansible
        state: present
        key: "{{ lookup('file', '/home/mbc/.ssh/id_ed25519.pub') }}"
    - name: Copy Proxmox SSH key
      ansible.posix.authorized_key:
        user: ansible
        state: present
        key: "{{ lookup('file', '/home/mbc/.ssh/proxmox.pub') }}"

  roles:
    - role: rsyslog

  tasks:
    - name: Set timezone to Los Angeles
      community.general.timezone:
        name: America/Los_Angeles
    - name: Check if EPEL is installed
      ansible.builtin.stat:
        path: /etc/yum.repos.d/epel.repo
      register: epel
    - name: Install EPEL repo
      ansible.builtin.dnf:
        name: epel-release
        state: present
      when: ansible_distribution != "Debian"
    - name: Enable EPEL CRB
      ansible.builtin.command: dnf config-manager --set-enabled crb
      register: crb_output
      changed_when: crb_output.rc != 0
      when:
        - not epel.stat.exists
        - ansible_distribution != "Debian"
    - name: Install Prometheus Node Exporter
      ansible.builtin.dnf:
        name: golang-github-prometheus-node-exporter
        state: present
      when: ansible_distribution != "Debian"
    - name: Install Prometheus Node Exporter (Debian)
      ansible.builtin.apt:
        name: prometheus-node-exporter
        state: present
      when: ansible_distribution == "Debian"
    - name: Enable Prometheus node exporter service
      ansible.builtin.systemd_service:
        name: prometheus-node-exporter
        enabled: true
        state: started
    - name: Mount NFS share
      ansible.posix.mount:
        src: files:/opt/share
        path: "{{ nfs_mountpoint }}"
        opts: rw,sync,hard
        boot: false
        state: mounted
        fstype: nfs
      when: inventory_hostname == "freeipa"

  handlers:
    - name: Restart machine
      ansible.builtin.reboot:
        msg: "Rebooting system after initial package upgrade..."
